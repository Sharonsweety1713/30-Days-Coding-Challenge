//You are given a 2-D matrix A of size NM its elements are integers. We will assume that the rows of the matrix are numbered from 
//top to bottom from 1 to N, the columns are numbered from left to right from 1 to M. 
//We will denote the element on the intersecting of the 2-th row and the j-th column as A i, j

//Find the maximum possible value X, such that
//There exists at least one row and one column where all the value of all the elements > X


import java.util.Scanner;
class Main
{
    public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int m=sc.nextInt();
        int[][]arr=new int [n][m];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
            arr[i][j]=sc.nextInt();
            }
        }
        int max=0,X=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                for(int k=i;k<n;k++)
                {
                    for(int l=j;j<n;j++)
                    {
                  if(arr[i][j]>=arr[k][l]&&arr[i][j]>=arr[l][k])
                  X=arr[i][j];

                    }
                }
                if(X>max)
                max=X;
            }
        }
        System.out.print(max/2);
    }
}
